name: Test and Deploy

on:
  # Run this workflow every time a PR is opened or a new commit is pushed to the PR
  pull_request:
  # Run this workflow every time a PR is merged to master
  push:
#    branches:
#      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyver:
          - 3.7
          - 3.8

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Lint using Black
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_PYTHON_BLACK: true
      - name: Setup Python ${{ matrix.pyver }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyver }}
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda install -q conda-build
          conda info -a
          conda env create -f continuous_integration/environment-${{ matrix.pyver }}.yml
          conda activate mg
          pip install -e .
      - name: Pytest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate mg
          pytest
          pytest --dask --cov-append
      - name: Conda Build
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda info -a
          conda install -q anaconda-client
          OUTPUT=$(conda build --output -c defaults -c conda-forge --python ${{ matrix.pyver }} continuous_integration/conda)
          echo "::set-env name=CONDA_BUILD_OUTPUT::$OUTPUT"
      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate mg
          conda install -c conda-forge coveralls
          coveralls
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: built_package
          path: $CONDA_BUILD_OUTPUT
          retention-days: 7

  dev_deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: built_package
          path: ./artifact_storage
      - name: Deploy with dev label
      run: |
        UPLOAD=`ls ./artifact_storage | awk -F "-" '{print $1}'`
        anaconda -t ${{ secrets.ANACONDA_ORG_TOKEN }} upload -u metagraph -l dev --no-progress --force --no-register $UPLOAD
